23. Difference between inheritance and encapsulation. B5. Difference between inheritance and abstraction.

i> Inheritance v/s encapsulation :
    Inheritance
    - Inheritance is a mechanism where a new class (subclass or derived class) derives attributes and methods from an existing class (superclass or base class).
    - It promotes code re usability by allowing a subclass to inherit the properties and behavior of its superclass.


    Encapsulation
    - Encapsulation is the concept of bundling the data (attributes) and the methods (behavior) that operate on the data into a single unit (class), and restricting access to some of the object's components.
    - It helps in data hiding, reducing coupling, and improving code maintainability and security.

ii> Inheritance and Abstraction
    Inheritance
    - Inheritance is a mechanism in which a new class (subclass or derived class) acquires attributes and methods from an existing class (superclass or base class).
    - It facilitates code re usability by enabling a subclass to inherit the properties and behavior of its superclass.


    Abstraction
    - Abstraction involves hiding the complex implementation details of an object and revealing only its essential features.
    - It aids in managing complexity by emphasizing what an object does rather than how it achieves it, thereby enhancing code clarity and maintainability.
